State 25 conflicts: 3 shift/reduce
State 26 conflicts: 3 shift/reduce
State 27 conflicts: 3 shift/reduce
State 28 conflicts: 3 shift/reduce
State 29 conflicts: 7 shift/reduce
State 30 conflicts: 7 shift/reduce
State 31 conflicts: 7 shift/reduce


Grammar

    0 $accept: program $end

    1 program: PROG declarations BEGIN command_sequence END

    2 declarations: expression
    3             | INTEGER id_seq IDENTIFIER '.'

    4 id_seq: expression
    5       | id_seq IDENTIFIER ','

    6 command_sequence: expression
    7                 | command_sequence command

    8 command: expression
    9        | IDENTIFIER ASSIGN expression
   10        | IF expression THEN command_sequence ELSE command_sequence ENDIF
   11        | WHILE expression DO command_sequence ENDWHILE
   12        | READ IDENTIFIER
   13        | WRITE expression

   14 expression: NUMBER
   15           | IDENTIFIER
   16           | '(' expression ')'
   17           | expression '+' expression
   18           | expression '-' expression
   19           | expression '*' expression
   20           | expression '/' expression
   21           | expression '<' expression
   22           | expression '>' expression
   23           | expression '=' expression


Terminals, with rules where they appear

$end (0) 0
'(' (40) 16
')' (41) 16
'*' (42) 19
'+' (43) 17
',' (44) 5
'-' (45) 18
'.' (46) 3
'/' (47) 20
'<' (60) 21
'=' (61) 23
'>' (62) 22
error (256)
IDENTIFIER (258) 3 5 9 12 15
NUMBER (259) 14
IF (260) 10
ELSE (261) 10
THEN (262) 10
DO (263) 11
PROG (264) 1
BEGIN (265) 1
END (266) 1
WHILE (267) 11
READ (268) 12
WRITE (269) 13
ENDIF (270) 10
ENDWHILE (271) 11
ASSIGN (272) 9
INTEGER (273) 3


Nonterminals, with rules where they appear

$accept (30)
    on left: 0
program (31)
    on left: 1, on right: 0
declarations (32)
    on left: 2 3, on right: 1
id_seq (33)
    on left: 4 5, on right: 3 5
command_sequence (34)
    on left: 6 7, on right: 1 7 10 11
command (35)
    on left: 8 9 10 11 12 13, on right: 7
expression (36)
    on left: 14 15 16 17 18 19 20 21 22 23, on right: 2 4 6 8 9 10
    11 13 16 17 18 19 20 21 22 23


state 0

    0 $accept: . program $end

    PROG  shift, and go to state 1

    program  go to state 2


state 1

    1 program: PROG . declarations BEGIN command_sequence END

    IDENTIFIER  shift, and go to state 3
    NUMBER      shift, and go to state 4
    INTEGER     shift, and go to state 5
    '('         shift, and go to state 6

    declarations  go to state 7
    expression    go to state 8


state 2

    0 $accept: program . $end

    $end  shift, and go to state 9


state 3

   15 expression: IDENTIFIER .

    $default  reduce using rule 15 (expression)


state 4

   14 expression: NUMBER .

    $default  reduce using rule 14 (expression)


state 5

    3 declarations: INTEGER . id_seq IDENTIFIER '.'

    IDENTIFIER  shift, and go to state 3
    NUMBER      shift, and go to state 4
    '('         shift, and go to state 6

    id_seq      go to state 10
    expression  go to state 11


state 6

   16 expression: '(' . expression ')'

    IDENTIFIER  shift, and go to state 3
    NUMBER      shift, and go to state 4
    '('         shift, and go to state 6

    expression  go to state 12


state 7

    1 program: PROG declarations . BEGIN command_sequence END

    BEGIN  shift, and go to state 13


state 8

    2 declarations: expression .
   17 expression: expression . '+' expression
   18           | expression . '-' expression
   19           | expression . '*' expression
   20           | expression . '/' expression
   21           | expression . '<' expression
   22           | expression . '>' expression
   23           | expression . '=' expression

    '+'  shift, and go to state 14
    '-'  shift, and go to state 15
    '/'  shift, and go to state 16
    '*'  shift, and go to state 17
    '<'  shift, and go to state 18
    '>'  shift, and go to state 19
    '='  shift, and go to state 20

    $default  reduce using rule 2 (declarations)


state 9

    0 $accept: program $end .

    $default  accept


state 10

    3 declarations: INTEGER id_seq . IDENTIFIER '.'
    5 id_seq: id_seq . IDENTIFIER ','

    IDENTIFIER  shift, and go to state 21


state 11

    4 id_seq: expression .
   17 expression: expression . '+' expression
   18           | expression . '-' expression
   19           | expression . '*' expression
   20           | expression . '/' expression
   21           | expression . '<' expression
   22           | expression . '>' expression
   23           | expression . '=' expression

    '+'  shift, and go to state 14
    '-'  shift, and go to state 15
    '/'  shift, and go to state 16
    '*'  shift, and go to state 17
    '<'  shift, and go to state 18
    '>'  shift, and go to state 19
    '='  shift, and go to state 20

    $default  reduce using rule 4 (id_seq)


state 12

   16 expression: '(' expression . ')'
   17           | expression . '+' expression
   18           | expression . '-' expression
   19           | expression . '*' expression
   20           | expression . '/' expression
   21           | expression . '<' expression
   22           | expression . '>' expression
   23           | expression . '=' expression

    '+'  shift, and go to state 14
    '-'  shift, and go to state 15
    '/'  shift, and go to state 16
    '*'  shift, and go to state 17
    ')'  shift, and go to state 22
    '<'  shift, and go to state 18
    '>'  shift, and go to state 19
    '='  shift, and go to state 20


state 13

    1 program: PROG declarations BEGIN . command_sequence END

    IDENTIFIER  shift, and go to state 3
    NUMBER      shift, and go to state 4
    '('         shift, and go to state 6

    command_sequence  go to state 23
    expression        go to state 24


state 14

   17 expression: expression '+' . expression

    IDENTIFIER  shift, and go to state 3
    NUMBER      shift, and go to state 4
    '('         shift, and go to state 6

    expression  go to state 25


state 15

   18 expression: expression '-' . expression

    IDENTIFIER  shift, and go to state 3
    NUMBER      shift, and go to state 4
    '('         shift, and go to state 6

    expression  go to state 26


state 16

   20 expression: expression '/' . expression

    IDENTIFIER  shift, and go to state 3
    NUMBER      shift, and go to state 4
    '('         shift, and go to state 6

    expression  go to state 27


state 17

   19 expression: expression '*' . expression

    IDENTIFIER  shift, and go to state 3
    NUMBER      shift, and go to state 4
    '('         shift, and go to state 6

    expression  go to state 28


state 18

   21 expression: expression '<' . expression

    IDENTIFIER  shift, and go to state 3
    NUMBER      shift, and go to state 4
    '('         shift, and go to state 6

    expression  go to state 29


state 19

   22 expression: expression '>' . expression

    IDENTIFIER  shift, and go to state 3
    NUMBER      shift, and go to state 4
    '('         shift, and go to state 6

    expression  go to state 30


state 20

   23 expression: expression '=' . expression

    IDENTIFIER  shift, and go to state 3
    NUMBER      shift, and go to state 4
    '('         shift, and go to state 6

    expression  go to state 31


state 21

    3 declarations: INTEGER id_seq IDENTIFIER . '.'
    5 id_seq: id_seq IDENTIFIER . ','

    '.'  shift, and go to state 32
    ','  shift, and go to state 33


state 22

   16 expression: '(' expression ')' .

    $default  reduce using rule 16 (expression)


state 23

    1 program: PROG declarations BEGIN command_sequence . END
    7 command_sequence: command_sequence . command

    IDENTIFIER  shift, and go to state 34
    NUMBER      shift, and go to state 4
    IF          shift, and go to state 35
    END         shift, and go to state 36
    WHILE       shift, and go to state 37
    READ        shift, and go to state 38
    WRITE       shift, and go to state 39
    '('         shift, and go to state 6

    command     go to state 40
    expression  go to state 41


state 24

    6 command_sequence: expression .
   17 expression: expression . '+' expression
   18           | expression . '-' expression
   19           | expression . '*' expression
   20           | expression . '/' expression
   21           | expression . '<' expression
   22           | expression . '>' expression
   23           | expression . '=' expression

    '+'  shift, and go to state 14
    '-'  shift, and go to state 15
    '/'  shift, and go to state 16
    '*'  shift, and go to state 17
    '<'  shift, and go to state 18
    '>'  shift, and go to state 19
    '='  shift, and go to state 20

    $default  reduce using rule 6 (command_sequence)


state 25

   17 expression: expression . '+' expression
   17           | expression '+' expression .
   18           | expression . '-' expression
   19           | expression . '*' expression
   20           | expression . '/' expression
   21           | expression . '<' expression
   22           | expression . '>' expression
   23           | expression . '=' expression

    '/'  shift, and go to state 16
    '*'  shift, and go to state 17
    '<'  shift, and go to state 18
    '>'  shift, and go to state 19
    '='  shift, and go to state 20

    '<'       [reduce using rule 17 (expression)]
    '>'       [reduce using rule 17 (expression)]
    '='       [reduce using rule 17 (expression)]
    $default  reduce using rule 17 (expression)


state 26

   17 expression: expression . '+' expression
   18           | expression . '-' expression
   18           | expression '-' expression .
   19           | expression . '*' expression
   20           | expression . '/' expression
   21           | expression . '<' expression
   22           | expression . '>' expression
   23           | expression . '=' expression

    '/'  shift, and go to state 16
    '*'  shift, and go to state 17
    '<'  shift, and go to state 18
    '>'  shift, and go to state 19
    '='  shift, and go to state 20

    '<'       [reduce using rule 18 (expression)]
    '>'       [reduce using rule 18 (expression)]
    '='       [reduce using rule 18 (expression)]
    $default  reduce using rule 18 (expression)


state 27

   17 expression: expression . '+' expression
   18           | expression . '-' expression
   19           | expression . '*' expression
   20           | expression . '/' expression
   20           | expression '/' expression .
   21           | expression . '<' expression
   22           | expression . '>' expression
   23           | expression . '=' expression

    '<'  shift, and go to state 18
    '>'  shift, and go to state 19
    '='  shift, and go to state 20

    '<'       [reduce using rule 20 (expression)]
    '>'       [reduce using rule 20 (expression)]
    '='       [reduce using rule 20 (expression)]
    $default  reduce using rule 20 (expression)


state 28

   17 expression: expression . '+' expression
   18           | expression . '-' expression
   19           | expression . '*' expression
   19           | expression '*' expression .
   20           | expression . '/' expression
   21           | expression . '<' expression
   22           | expression . '>' expression
   23           | expression . '=' expression

    '<'  shift, and go to state 18
    '>'  shift, and go to state 19
    '='  shift, and go to state 20

    '<'       [reduce using rule 19 (expression)]
    '>'       [reduce using rule 19 (expression)]
    '='       [reduce using rule 19 (expression)]
    $default  reduce using rule 19 (expression)


state 29

   17 expression: expression . '+' expression
   18           | expression . '-' expression
   19           | expression . '*' expression
   20           | expression . '/' expression
   21           | expression . '<' expression
   21           | expression '<' expression .
   22           | expression . '>' expression
   23           | expression . '=' expression

    '+'  shift, and go to state 14
    '-'  shift, and go to state 15
    '/'  shift, and go to state 16
    '*'  shift, and go to state 17
    '<'  shift, and go to state 18
    '>'  shift, and go to state 19
    '='  shift, and go to state 20

    '+'       [reduce using rule 21 (expression)]
    '-'       [reduce using rule 21 (expression)]
    '/'       [reduce using rule 21 (expression)]
    '*'       [reduce using rule 21 (expression)]
    '<'       [reduce using rule 21 (expression)]
    '>'       [reduce using rule 21 (expression)]
    '='       [reduce using rule 21 (expression)]
    $default  reduce using rule 21 (expression)


state 30

   17 expression: expression . '+' expression
   18           | expression . '-' expression
   19           | expression . '*' expression
   20           | expression . '/' expression
   21           | expression . '<' expression
   22           | expression . '>' expression
   22           | expression '>' expression .
   23           | expression . '=' expression

    '+'  shift, and go to state 14
    '-'  shift, and go to state 15
    '/'  shift, and go to state 16
    '*'  shift, and go to state 17
    '<'  shift, and go to state 18
    '>'  shift, and go to state 19
    '='  shift, and go to state 20

    '+'       [reduce using rule 22 (expression)]
    '-'       [reduce using rule 22 (expression)]
    '/'       [reduce using rule 22 (expression)]
    '*'       [reduce using rule 22 (expression)]
    '<'       [reduce using rule 22 (expression)]
    '>'       [reduce using rule 22 (expression)]
    '='       [reduce using rule 22 (expression)]
    $default  reduce using rule 22 (expression)


state 31

   17 expression: expression . '+' expression
   18           | expression . '-' expression
   19           | expression . '*' expression
   20           | expression . '/' expression
   21           | expression . '<' expression
   22           | expression . '>' expression
   23           | expression . '=' expression
   23           | expression '=' expression .

    '+'  shift, and go to state 14
    '-'  shift, and go to state 15
    '/'  shift, and go to state 16
    '*'  shift, and go to state 17
    '<'  shift, and go to state 18
    '>'  shift, and go to state 19
    '='  shift, and go to state 20

    '+'       [reduce using rule 23 (expression)]
    '-'       [reduce using rule 23 (expression)]
    '/'       [reduce using rule 23 (expression)]
    '*'       [reduce using rule 23 (expression)]
    '<'       [reduce using rule 23 (expression)]
    '>'       [reduce using rule 23 (expression)]
    '='       [reduce using rule 23 (expression)]
    $default  reduce using rule 23 (expression)


state 32

    3 declarations: INTEGER id_seq IDENTIFIER '.' .

    $default  reduce using rule 3 (declarations)


state 33

    5 id_seq: id_seq IDENTIFIER ',' .

    $default  reduce using rule 5 (id_seq)


state 34

    9 command: IDENTIFIER . ASSIGN expression
   15 expression: IDENTIFIER .

    ASSIGN  shift, and go to state 42

    $default  reduce using rule 15 (expression)


state 35

   10 command: IF . expression THEN command_sequence ELSE command_sequence ENDIF

    IDENTIFIER  shift, and go to state 3
    NUMBER      shift, and go to state 4
    '('         shift, and go to state 6

    expression  go to state 43


state 36

    1 program: PROG declarations BEGIN command_sequence END .

    $default  reduce using rule 1 (program)


state 37

   11 command: WHILE . expression DO command_sequence ENDWHILE

    IDENTIFIER  shift, and go to state 3
    NUMBER      shift, and go to state 4
    '('         shift, and go to state 6

    expression  go to state 44


state 38

   12 command: READ . IDENTIFIER

    IDENTIFIER  shift, and go to state 45


state 39

   13 command: WRITE . expression

    IDENTIFIER  shift, and go to state 3
    NUMBER      shift, and go to state 4
    '('         shift, and go to state 6

    expression  go to state 46


state 40

    7 command_sequence: command_sequence command .

    $default  reduce using rule 7 (command_sequence)


state 41

    8 command: expression .
   17 expression: expression . '+' expression
   18           | expression . '-' expression
   19           | expression . '*' expression
   20           | expression . '/' expression
   21           | expression . '<' expression
   22           | expression . '>' expression
   23           | expression . '=' expression

    '+'  shift, and go to state 14
    '-'  shift, and go to state 15
    '/'  shift, and go to state 16
    '*'  shift, and go to state 17
    '<'  shift, and go to state 18
    '>'  shift, and go to state 19
    '='  shift, and go to state 20

    $default  reduce using rule 8 (command)


state 42

    9 command: IDENTIFIER ASSIGN . expression

    IDENTIFIER  shift, and go to state 3
    NUMBER      shift, and go to state 4
    '('         shift, and go to state 6

    expression  go to state 47


state 43

   10 command: IF expression . THEN command_sequence ELSE command_sequence ENDIF
   17 expression: expression . '+' expression
   18           | expression . '-' expression
   19           | expression . '*' expression
   20           | expression . '/' expression
   21           | expression . '<' expression
   22           | expression . '>' expression
   23           | expression . '=' expression

    THEN  shift, and go to state 48
    '+'   shift, and go to state 14
    '-'   shift, and go to state 15
    '/'   shift, and go to state 16
    '*'   shift, and go to state 17
    '<'   shift, and go to state 18
    '>'   shift, and go to state 19
    '='   shift, and go to state 20


state 44

   11 command: WHILE expression . DO command_sequence ENDWHILE
   17 expression: expression . '+' expression
   18           | expression . '-' expression
   19           | expression . '*' expression
   20           | expression . '/' expression
   21           | expression . '<' expression
   22           | expression . '>' expression
   23           | expression . '=' expression

    DO   shift, and go to state 49
    '+'  shift, and go to state 14
    '-'  shift, and go to state 15
    '/'  shift, and go to state 16
    '*'  shift, and go to state 17
    '<'  shift, and go to state 18
    '>'  shift, and go to state 19
    '='  shift, and go to state 20


state 45

   12 command: READ IDENTIFIER .

    $default  reduce using rule 12 (command)


state 46

   13 command: WRITE expression .
   17 expression: expression . '+' expression
   18           | expression . '-' expression
   19           | expression . '*' expression
   20           | expression . '/' expression
   21           | expression . '<' expression
   22           | expression . '>' expression
   23           | expression . '=' expression

    '+'  shift, and go to state 14
    '-'  shift, and go to state 15
    '/'  shift, and go to state 16
    '*'  shift, and go to state 17
    '<'  shift, and go to state 18
    '>'  shift, and go to state 19
    '='  shift, and go to state 20

    $default  reduce using rule 13 (command)


state 47

    9 command: IDENTIFIER ASSIGN expression .
   17 expression: expression . '+' expression
   18           | expression . '-' expression
   19           | expression . '*' expression
   20           | expression . '/' expression
   21           | expression . '<' expression
   22           | expression . '>' expression
   23           | expression . '=' expression

    '+'  shift, and go to state 14
    '-'  shift, and go to state 15
    '/'  shift, and go to state 16
    '*'  shift, and go to state 17
    '<'  shift, and go to state 18
    '>'  shift, and go to state 19
    '='  shift, and go to state 20

    $default  reduce using rule 9 (command)


state 48

   10 command: IF expression THEN . command_sequence ELSE command_sequence ENDIF

    IDENTIFIER  shift, and go to state 3
    NUMBER      shift, and go to state 4
    '('         shift, and go to state 6

    command_sequence  go to state 50
    expression        go to state 24


state 49

   11 command: WHILE expression DO . command_sequence ENDWHILE

    IDENTIFIER  shift, and go to state 3
    NUMBER      shift, and go to state 4
    '('         shift, and go to state 6

    command_sequence  go to state 51
    expression        go to state 24


state 50

    7 command_sequence: command_sequence . command
   10 command: IF expression THEN command_sequence . ELSE command_sequence ENDIF

    IDENTIFIER  shift, and go to state 34
    NUMBER      shift, and go to state 4
    IF          shift, and go to state 35
    ELSE        shift, and go to state 52
    WHILE       shift, and go to state 37
    READ        shift, and go to state 38
    WRITE       shift, and go to state 39
    '('         shift, and go to state 6

    command     go to state 40
    expression  go to state 41


state 51

    7 command_sequence: command_sequence . command
   11 command: WHILE expression DO command_sequence . ENDWHILE

    IDENTIFIER  shift, and go to state 34
    NUMBER      shift, and go to state 4
    IF          shift, and go to state 35
    WHILE       shift, and go to state 37
    READ        shift, and go to state 38
    WRITE       shift, and go to state 39
    ENDWHILE    shift, and go to state 53
    '('         shift, and go to state 6

    command     go to state 40
    expression  go to state 41


state 52

   10 command: IF expression THEN command_sequence ELSE . command_sequence ENDIF

    IDENTIFIER  shift, and go to state 3
    NUMBER      shift, and go to state 4
    '('         shift, and go to state 6

    command_sequence  go to state 54
    expression        go to state 24


state 53

   11 command: WHILE expression DO command_sequence ENDWHILE .

    $default  reduce using rule 11 (command)


state 54

    7 command_sequence: command_sequence . command
   10 command: IF expression THEN command_sequence ELSE command_sequence . ENDIF

    IDENTIFIER  shift, and go to state 34
    NUMBER      shift, and go to state 4
    IF          shift, and go to state 35
    WHILE       shift, and go to state 37
    READ        shift, and go to state 38
    WRITE       shift, and go to state 39
    ENDIF       shift, and go to state 55
    '('         shift, and go to state 6

    command     go to state 40
    expression  go to state 41


state 55

   10 command: IF expression THEN command_sequence ELSE command_sequence ENDIF .

    $default  reduce using rule 10 (command)
